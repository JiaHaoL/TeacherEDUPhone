<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
    default-autowire="byName">
    
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
			</list>
		</property>
	</bean> 
	
	
	<bean id="coreDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
            <property name="driverClass" value="${core.driverClassName}"/>
            <property name="jdbcUrl" value="${core.url}"/>
            <property name="user" value="${core.username}"/>
            <property name="password" value="${core.password}" />
            <property name="acquireIncrement" value="5"/>
            <property name="idleConnectionTestPeriod" value="60"/>
            <property name="maxPoolSize" value="50"/>
            <property name="minPoolSize" value="5"/>
            <property name="maxStatements" value="0"/>
            <property name="acquireRetryAttempts" value="1"/>
            <property name="initialPoolSize" value="5"/>
            <property name="maxIdleTime" value="120"/>
    </bean>
	
	<bean id="dataSource" class="cn.smartercampus.core.util.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="0" value-ref="coreDataSource"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="coreDataSource"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:ibatis/sqlMapConfig.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
           
	<aop:config>
		<aop:advisor pointcut="execution(* cn.smartercampus.core.service.*.*(..))" advice-ref="tx" />
	</aop:config>
	
	<tx:advice id="tx">
		<tx:attributes>
			<tx:method name="insert*" />
			<tx:method name="update*" />
			<tx:method name="delete*" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- AOP管理 -->
	<bean id="aopService" class="cn.smartercampus.core.service.impl.AopServiceImpl"></bean>

	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>aopService</value>
			</list>
		</property>
	</bean>
	
	<import resource="classpath:spring/applicationContext-*.xml"/>
	
	<!--context:component-scan base-package="cn.smartercampus"/-->
	<!--aop:aspectj-autoproxy/-->
</beans>